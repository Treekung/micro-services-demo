# Production Overlay สำหรับ Kubernetes Deployment
# ใช้ร่วมกับ base manifests เพื่อปรับแต่งสำหรับ production

apiVersion: v1
kind: ConfigMap
metadata:
  name: production-config
  namespace: microservices-demo
data:
  # Environment-specific configurations
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  ENABLE_METRICS: "true"
  ENABLE_HEALTH_CHECKS: "true"
  
  # Database configurations
  DB_POOL_SIZE: "20"
  DB_CONNECTION_TIMEOUT: "30000"
  DB_IDLE_TIMEOUT: "600000"
  
  # RabbitMQ configurations
  RABBITMQ_HEARTBEAT: "60"
  RABBITMQ_CONNECTION_TIMEOUT: "30000"
  
---
apiVersion: v1
kind: Secret
metadata:
  name: production-secrets
  namespace: microservices-demo
type: Opaque
data:
  # Base64 encoded secrets - ใช้ GitHub Secrets หรือ external secret management
  # postgres-password: <base64-encoded-password>
  # rabbitmq-password: <base64-encoded-password>
  # jwt-secret: <base64-encoded-jwt-secret>
  # api-key: <base64-encoded-api-key>

---
# Resource Limits และ Requests สำหรับ Production
apiVersion: v1
kind: LimitRange
metadata:
  name: microservices-limits
  namespace: microservices-demo
spec:
  limits:
  - default:
      cpu: "500m"
      memory: "512Mi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
  - max:
      cpu: "2"
      memory: "2Gi"
    min:
      cpu: "50m"
      memory: "64Mi"
    type: Container

---
# Network Policy สำหรับ Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: microservices-network-policy
  namespace: microservices-demo
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: microservices-demo
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: microservices-demo
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: order-service-hpa
  namespace: microservices-demo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: order-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: product-service-hpa
  namespace: microservices-demo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: product-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: payment-service-hpa
  namespace: microservices-demo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: payment-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: order-service-pdb
  namespace: microservices-demo
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: order-service

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: product-service-pdb
  namespace: microservices-demo
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: product-service

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: payment-service-pdb
  namespace: microservices-demo
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: payment-service
