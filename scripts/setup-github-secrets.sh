#!/bin/bash

# ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ GitHub Secrets ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Microservices K8s Deployment
# ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á GitHub CLI (gh) ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: https://cli.github.com/

set -e

echo "üöÄ GitHub Secrets Setup ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Microservices K8s Deployment"
echo "============================================================"

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á GitHub CLI ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if ! command -v gh &> /dev/null; then
    echo "‚ùå GitHub CLI (gh) ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á"
    echo "üì• ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏à‡∏≤‡∏Å: https://cli.github.com/"
    exit 1
fi

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ login ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if ! gh auth status &> /dev/null; then
    echo "üîê ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ login ‡∏Å‡πà‡∏≠‡∏ô:"
    echo "gh auth login"
    exit 1
fi

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô git repository ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "‚ùå ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô git repository"
    exit 1
fi

echo ""
echo "üìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• repository..."
REPO=$(gh repo view --json nameWithOwner --jq .nameWithOwner)
echo "Repository: $REPO"

echo ""
echo "üîß ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Secrets:"
echo "1. KUBE_CONFIG - Kubernetes configuration"
echo "2. ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (optional)"

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™ base64
encode_base64() {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        base64 -i "$1"
    else
        # Linux
        base64 -w 0 "$1"
    fi
}

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ KUBE_CONFIG
echo ""
echo "üîë ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ KUBE_CONFIG"
echo "====================="

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå kubeconfig
KUBECONFIG_PATH="$HOME/.kube/config"
if [[ ! -f "$KUBECONFIG_PATH" ]]; then
    echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå kubeconfig ‡∏ó‡∏µ‡πà $KUBECONFIG_PATH"
    echo ""
    echo "üìù ‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡∏£‡πâ‡∏≤‡∏á kubeconfig:"
    echo ""
    echo "Google GKE:"
    echo "gcloud container clusters get-credentials CLUSTER_NAME --zone ZONE --project PROJECT_ID"
    echo ""
    echo "AWS EKS:"
    echo "aws eks update-kubeconfig --region REGION --name CLUSTER_NAME"
    echo ""
    echo "Azure AKS:"
    echo "az aks get-credentials --resource-group RG_NAME --name CLUSTER_NAME"
    echo ""
    read -p "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á kubeconfig ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠..."
    
    if [[ ! -f "$KUBECONFIG_PATH" ]]; then
        echo "‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå kubeconfig"
        exit 1
    fi
fi

echo "‚úÖ ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå kubeconfig"

# ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• cluster
echo ""
echo "üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Kubernetes cluster:"
kubectl config current-context 2>/dev/null || echo "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• context ‡πÑ‡∏î‡πâ"

echo ""
read -p "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ kubeconfig ‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/N): " confirm
if [[ $confirm != [yY] ]]; then
    echo "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"
    exit 1
fi

# ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™ kubeconfig
echo "üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™ kubeconfig..."
KUBE_CONFIG_BASE64=$(encode_base64 "$KUBECONFIG_PATH")

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ secret
echo "üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î KUBE_CONFIG secret..."
echo "$KUBE_CONFIG_BASE64" | gh secret set KUBE_CONFIG

echo "‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ KUBE_CONFIG ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"

# ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
echo ""
echo "üîß ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°"
echo "=================="

# Docker Registry (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ GitHub Container Registry)
echo ""
read -p "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Docker Registry ‡∏≠‡∏∑‡πà‡∏ô‡πÅ‡∏ó‡∏ô GitHub Container Registry ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/N): " use_custom_registry
if [[ $use_custom_registry == [yY] ]]; then
    read -p "Registry URL (‡πÄ‡∏ä‡πà‡∏ô docker.io, gcr.io): " registry_url
    read -p "Registry Username: " registry_username
    read -s -p "Registry Password: " registry_password
    echo ""
    
    gh secret set DOCKER_REGISTRY --body "$registry_url"
    gh secret set DOCKER_USERNAME --body "$registry_username"
    echo "$registry_password" | gh secret set DOCKER_PASSWORD
    
    echo "‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Docker Registry secrets ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
fi

# Database passwords (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö production)
echo ""
read -p "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ database passwords ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö production ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/N): " setup_db_passwords
if [[ $setup_db_passwords == [yY] ]]; then
    read -s -p "PostgreSQL Password: " postgres_password
    echo ""
    read -s -p "RabbitMQ Password: " rabbitmq_password
    echo ""
    
    echo "$postgres_password" | gh secret set POSTGRES_PASSWORD
    echo "$rabbitmq_password" | gh secret set RABBITMQ_PASSWORD
    
    echo "‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Database passwords ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
fi

# ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ secrets ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß
echo ""
echo "üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Secrets ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß:"
echo "================================"
gh secret list

echo ""
echo "üéâ ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ GitHub Secrets ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!"
echo ""
echo "üìù ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:"
echo "1. Push code ‡πÑ‡∏õ main branch ‡πÄ‡∏û‡∏∑‡πà‡∏≠ trigger deployment"
echo "2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Actions tab ‡πÉ‡∏ô GitHub repository"
echo "3. ‡∏î‡∏π deployment status ‡πÉ‡∏ô Kubernetes cluster"
echo ""
echo "üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå:"
echo "- Actions: https://github.com/$REPO/actions"
echo "- Secrets: https://github.com/$REPO/settings/secrets/actions"
echo ""
echo "üìö ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°: GITHUB-ACTIONS-SETUP.md"
