services:
  # PostgreSQL Databases
  order-db:
    image: postgres:15
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    volumes:
      - order_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  product-db:
    image: postgres:15
    environment:
      POSTGRES_DB: product_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - product_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  payment-db:
    image: postgres:15
    environment:
      POSTGRES_DB: payment_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - payment_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Microservices
  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      DB_HOST: order-db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: order_db
      RABBITMQ_URL: amqp://admin:admin@rabbitmq:5672
    depends_on:
      order-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices-network

  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      DB_HOST: product-db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: product_db
      RABBITMQ_URL: amqp://admin:admin@rabbitmq:5672
    depends_on:
      product-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices-network

  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      DB_HOST: payment-db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: payment_db
      RABBITMQ_URL: amqp://admin:admin@rabbitmq:5672
    depends_on:
      payment-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices-network

  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      order-service:
        condition: service_started
      product-service:
        condition: service_started
      payment-service:
        condition: service_started
    networks:
      - microservices-network

volumes:
  order_data:
  product_data:
  payment_data:
  rabbitmq_data:

networks:
  microservices-network:
    driver: bridge
